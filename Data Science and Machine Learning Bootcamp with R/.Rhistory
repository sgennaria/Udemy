df2 <- as.data.frame(df)
#df2$AvailableModesOfSale[sapply( l, paste0, collapse="")]
df2$AvailableModesOfSale[sapply(length, paste0, collapse="")]
df2$GenreList[sapply(df2$GenreList, function(l){ifelse(length(l),FALSE,TRUE)})] <- NA
df2$AvailableModesOfSale[sapply(df2$AvailableModesOfSale, is.null)] <- NA
df2$CustomerModeOfSaleDescription[sapply(df2$CustomerModeOfSaleDescription, is.null)] <- NA
df2$EventCode[sapply(df2$EventCode, is.null)] <- NA
df2$VenueCode[sapply(df2$VenueCode, is.null)] <- NA
df2$PromoMessage[sapply(df2$PromoMessage, is.null)] <- NA
df2$Series[sapply(df2$Series, is.null)] <- NA
df2$DisplayOnSaleDate[sapply(df2$DisplayOnSaleDate, is.null)] <- NA
df2$DisplayDonorOnSale[sapply(df2$DisplayDonorOnSale, is.null)] <- NA
df3 <- apply(df2, 2, unlist)
df3$GenreList <- sapply(df2$GenreList, paste0, collapse=",")
df3$AvailableModesOfSale <- sapply(df2$AvailableModesOfSale, paste0, collapse=",")
df4 <- as.data.frame(df3)
df4
apiurl <- 'http://api.kennedy-center.org/api/Calendar/GetCalendarData/2017-7-22/2017-7-23'
pg <- GET(apiurl)
raw <- content(pg)
df <- do.call(rbind, raw)
df2 <- as.data.frame(df)
#df2$AvailableModesOfSale[sapply( l, paste0, collapse="")]
df2$AvailableModesOfSale[sapply(length, paste0, collapse="")]
df2$GenreList[sapply(df2$GenreList, function(l){ifelse(length(l),FALSE,TRUE)})] <- NA
df2$AvailableModesOfSale[sapply(df2$AvailableModesOfSale, is.null)] <- NA
df2$CustomerModeOfSaleDescription[sapply(df2$CustomerModeOfSaleDescription, is.null)] <- NA
df2$EventCode[sapply(df2$EventCode, is.null)] <- NA
df2$VenueCode[sapply(df2$VenueCode, is.null)] <- NA
df2$PromoMessage[sapply(df2$PromoMessage, is.null)] <- NA
df2$Series[sapply(df2$Series, is.null)] <- NA
df2$DisplayOnSaleDate[sapply(df2$DisplayOnSaleDate, is.null)] <- NA
df2$DisplayDonorOnSale[sapply(df2$DisplayDonorOnSale, is.null)] <- NA
df3 <- apply(df2, 2, unlist)
df3$GenreList <- sapply(df2$GenreList, paste0, collapse=",")
df3$AvailableModesOfSale <- sapply(df2$AvailableModesOfSale, paste0, collapse=",")
df4 <- as.data.frame(df3)
df4
str(df4)
?factor
df4$Title
as.string(df4$Title)
as.character(df4$Title)
df5 <- df4
df5$Title <- as.character(df5$Title)
str(df5)
str(df5$Today)
df5$Today
df5$Today[1]
as.date(df5$Today[1])
as.Date(df5$Today[1])
as.character(df5$Today[1])
x <- as.character(df5$Today[1])
strsplit(x, '(')[2]
strsplit(x, '('))[2]
strsplit(x, '(')
strsplit(x, '(', fixed = TRUE)
strsplit(x, '(', fixed = TRUE)[1]
strsplit(x, '(', fixed = TRUE)[2]
strsplit(x, '(', fixed = TRUE)[[2]
strsplit(x, '(', fixed = TRUE)[[2]]
strsplit(x, '(', fixed = TRUE)[[1]][2]
strsplit(x, '(', fixed = TRUE)[1][2]
strsplit(strsplit(x, '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1]
strsplit(strsplit(as.character(df5$Today[1]), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1]
strsplit(strsplit(as.character(df5$Today[1]), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1]
y <-
strsplit(strsplit(as.character(df5$Today[1]), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1]
y <- strsplit(strsplit(as.character(df5$Today[1]), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1]
y
as.Date(y)
as.POSIXct(as.numeric(y))
as.POSIXct(as.numeric(y), origin='1970-01-01')
as.POSIXct(as.numeric(y), origin='0001-01-01')
as.POSIXct(as.numeric(y)/1000, origin='0001-01-01')
as.POSIXct(as.numeric(y)/1000, origin='1970-01-01')
str(df5)
df5
as.POSIXct(as.numeric(strsplit(strsplit(as.character(df5$Today[1]), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000, origin='1970-01-01')
as.POSIXct(as.numeric(strsplit(strsplit(as.character(df5$DonorOnSale[1]), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000, origin='1970-01-01')
as.POSIXct(as.numeric(strsplit(strsplit(as.character(df5$DonorOnSale[4]), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000, origin='1970-01-01')
df5 %>% slice(PerfDate, DisplayPerfDate, DisplayPerfTime)
library(dplyr)
df5 %>% subset(PerfDate, DisplayPerfDate, DisplayPerfTime)
df5 %>% subset(c('PerfDate', 'DisplayPerfDate', 'DisplayPerfTime')
df5 %>% subset(c('PerfDate', 'DisplayPerfDate', 'DisplayPerfTime'))
df5 %>% subset(select=c('PerfDate', 'DisplayPerfDate', 'DisplayPerfTime'))
as.POSIXct(as.numeric(strsplit(strsplit(as.character(df5$PerfDate[4]), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000, origin='1970-01-01')
df5
df5 %>% mutate(TodayTS = as.POSIXct(as.numeric(strsplit(strsplit(as.character(Today), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000, origin='1970-01-01'))
str(df5)
df5 <- df5 %>% mutate(TodayTS = as.POSIXct(as.numeric(strsplit(strsplit(as.character(Today), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000, origin='1970-01-01'))
str(df5)
df5 <- df5 %>% mutate(PerfTS = as.POSIXct(as.numeric(strsplit(strsplit(as.character(PerfDate), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000, origin='1970-01-01'))
df5 <- df5 %>% mutate(OnSaleTS = as.POSIXct(as.numeric(strsplit(strsplit(as.character(OnSaleDate), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000, origin='1970-01-01'))
df5 <- df5 %>% mutate(DonorOnSaleTS = as.POSIXct(as.numeric(strsplit(strsplit(as.character(DonorOnSale), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000, origin='1970-01-01'))
str(df5)
df5
df5 <- df4
df5
df5$TodayTS <- as.POSIXct(as.numeric(strsplit(strsplit(as.character(Today), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000, origin='1970-01-01')
df5$TodayTS <- as.POSIXct(as.numeric(strsplit(strsplit(as.character(df5$Today), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000, origin='1970-01-01')
df5
df5$PerfTS <- as.POSIXct(as.numeric(strsplit(strsplit(as.character(df5$PerfDate), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000, origin='1970-01-01')
df5
df5 <- df4
df5 <- transform(df5, PerfTS = as.POSIXct(as.numeric(strsplit(strsplit(as.character(df5$PerfDate), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000, origin='1970-01-01'))
df5
str(df5)
sapply(df5, mode)
sapply(df5, class)
df5
str(df5)
df5 <- transform(df4,
Title = as.character(Title)
)
str(df5)
df5
str(df5)
df5 <- transform(df4,
Title = as.character(Title)
,Today = as.character(Today)
,PerfDate = as.character(PerfDate)
,DisplayPerfDate = as.character(DisplayPerfDate)
,DisplayPerfTime = as.character(DisplayPerfTime)
,BlurbAbstract = as.character(BlurbAbstract)
,GenreList = as.character(GenreList)
,AvailableModesOfSale = as.character(AvailableModesOfSale)
,CustomerModeOfSaleDescription = as.character(CustomerModeOfSaleDescription)
,EventCode = as.character(EventCode)
,VenueCode = as.character(VenueCode)
,VenueDescription = as.character(VenueDescription)
,OnSaleDate = as.character(OnSaleDate)
,DisplayOnSaleDate = as.character(DisplayOnSaleDate)
,DonorOnSale = as.character(DonorOnSale)
,DisplayDonorOnSale = as.character(DisplayDonorOnSale)
)
str(df5)
df5 <- transform(df5, PerfTS = as.POSIXct(as.numeric(strsplit(strsplit(as.character(df5$PerfDate), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000, origin='1970-01-01'))
df5
df5 <- transform(df4,
Title = as.character(Title)
,Today = as.numeric(strsplit(strsplit(as.character(Today), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000
,PerfDate = as.numeric(strsplit(strsplit(as.character(PerfDate), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000
,DisplayPerfDate = as.character(DisplayPerfDate)
,DisplayPerfTime = as.character(DisplayPerfTime)
,BlurbAbstract = as.character(BlurbAbstract)
,GenreList = as.character(GenreList)
,AvailableModesOfSale = as.character(AvailableModesOfSale)
,CustomerModeOfSaleDescription = as.character(CustomerModeOfSaleDescription)
,EventCode = as.character(EventCode)
,VenueCode = as.character(VenueCode)
,VenueDescription = as.character(VenueDescription)
,OnSaleDate = as.numeric(strsplit(strsplit(as.character(OnSaleDate), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000
,DisplayOnSaleDate = as.character(DisplayOnSaleDate)
,DonorOnSale = as.numeric(strsplit(strsplit(as.character(DonorOnSale), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000
,DisplayDonorOnSale = as.character(DisplayDonorOnSale)
)
df5
str(df5)
df5$VenueDescription
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
trim(df5$VenueDescription)
df5 <- transform(df4,
Title = trim(as.character(Title))
,Today = as.numeric(strsplit(strsplit(as.character(Today), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000
,PerfDate = as.numeric(strsplit(strsplit(as.character(PerfDate), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000
,DisplayPerfDate = trim(as.character(DisplayPerfDate))
,DisplayPerfTime = trim(as.character(DisplayPerfTime))
,BlurbAbstract = trim(as.character(BlurbAbstract))
,GenreList = trim(as.character(GenreList))
,AvailableModesOfSale = trim(as.character(AvailableModesOfSale))
,CustomerModeOfSaleDescription = trim(as.character(CustomerModeOfSaleDescription))
,EventCode = trim(as.character(EventCode))
,VenueCode = trim(as.character(VenueCode))
,VenueDescription = trim(as.character(VenueDescription))
,OnSaleDate = as.numeric(strsplit(strsplit(as.character(OnSaleDate), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000
,DisplayOnSaleDate = trim(as.character(DisplayOnSaleDate))
,DonorOnSale = as.numeric(strsplit(strsplit(as.character(DonorOnSale), '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000
,DisplayDonorOnSale = trim(as.character(DisplayDonorOnSale))
)
df5
str(df5)
str(df3)
str(df4)
df4 <- as.data.frame(df3, stringsAsFactors = FALSE)
str(df4)
df5 <- transform(df4,
Title = trim(Title)
,Today = as.numeric(strsplit(strsplit(Today, '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000
,PerfDate = as.numeric(strsplit(strsplit(PerfDate, '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000
,DisplayPerfDate = trim(DisplayPerfDate)
,DisplayPerfTime = trim(DisplayPerfTime)
,BlurbAbstract = trim(BlurbAbstract)
,GenreList = trim(GenreList)
,AvailableModesOfSale = trim(AvailableModesOfSale)
,CustomerModeOfSaleDescription = trim(CustomerModeOfSaleDescription)
,EventCode = trim(EventCode)
,VenueCode = trim(VenueCode)
,VenueDescription = trim(VenueDescription)
,OnSaleDate = as.numeric(strsplit(strsplit(OnSaleDate, '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000
,DisplayOnSaleDate = trim(DisplayOnSaleDate)
,DonorOnSale = as.numeric(strsplit(strsplit(DonorOnSale, '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)[[1]][1])/1000
,DisplayDonorOnSale = trim(DisplayDonorOnSale)
)
df5
str(df5)
df4 <- as.data.frame(df3, stringsAsFactors = FALSE)
df4
str(df4)
strsplit(df5$Today, '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)
strsplit(df4$DonorOnSale, '(', fixed = TRUE)[[1]][2], ')', fixed = TRUE)
strsplit(df4$DonorOnSale, '(', fixed = TRUE)[[1]][2]
strsplit(df4$DonorOnSale, '(', fixed = TRUE)
strsplit(df4$DonorOnSale, '(', fixed = TRUE)[[]][2]
strsplit(df4$DonorOnSale, '(', fixed = TRUE)[2]
strsplit(df4$DonorOnSale, '(', fixed = TRUE)
strsplit(df4$DonorOnSale, '(', fixed = TRUE)[[,]]
strsplit(df4$DonorOnSale, '(', fixed = TRUE)[[]]
strsplit(df4$DonorOnSale, '(', fixed = TRUE)[]
strsplit(df4$DonorOnSale, '(', fixed = TRUE)[][2]
strsplit(df4$DonorOnSale, '(', fixed = TRUE)
typeof(strsplit(df4$DonorOnSale, '(', fixed = TRUE))
df4$DonorOnSale
sub("[().*", "", df4$DonorOnSale)
sub("[)].*", "", df4$DonorOnSale)
sub(".*[(]", "", df4$DonorOnSale)
sub("[)].*", "", sub(".*[(]", "", df4$DonorOnSale))
convDate <- function(x) as.numeric(sub("[)].*", "", sub(".*[(]", "", x))) / 1000
df5 <- transform(df4,
Title = trim(Title)
,Today = convDate(Today)
,PerfDate = convDate(PerfDate)
,DisplayPerfDate = trim(DisplayPerfDate)
,DisplayPerfTime = trim(DisplayPerfTime)
,BlurbAbstract = trim(BlurbAbstract)
,GenreList = trim(GenreList)
,AvailableModesOfSale = trim(AvailableModesOfSale)
,CustomerModeOfSaleDescription = trim(CustomerModeOfSaleDescription)
,EventCode = trim(EventCode)
,VenueCode = trim(VenueCode)
,VenueDescription = trim(VenueDescription)
,OnSaleDate = convDate(OnSaleDate)
,DisplayOnSaleDate = trim(DisplayOnSaleDate)
,DonorOnSale = convDate(DonorOnSale)
,DisplayDonorOnSale = trim(DisplayDonorOnSale)
)
df5
str(df5)
TS <- function(x) as.POSIXct(x, origin='1970-01-01')
df5$TodayTS <- TS(df5$Today)
df5$PerfTS <- TS(df5$PerfDate)
df5$OnSaleTS <- TS(df5$OnSaleDate)
df5$DonorOnSaleTS <- TS(df5$DonorOnSale)
df5
str(df5)
\
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
convDate <- function(x) as.numeric(sub("[)].*", "", sub(".*[(]", "", x))) / 1000
df5 <- transform(df4
,Title = trim(Title)
,Today = convDate(Today)
,PerfDate = convDate(PerfDate)
,DisplayPerfDate = trim(DisplayPerfDate)
,DisplayPerfTime = trim(DisplayPerfTime)
,BlurbAbstract = trim(BlurbAbstract)
,GenreList = trim(GenreList)
,AvailableModesOfSale = trim(AvailableModesOfSale)
,CustomerModeOfSaleDescription = trim(CustomerModeOfSaleDescription)
,EventCode = trim(EventCode)
,VenueCode = trim(VenueCode)
,VenueDescription = trim(VenueDescription)
,OnSaleDate = convDate(OnSaleDate)
,DisplayOnSaleDate = trim(DisplayOnSaleDate)
,DonorOnSale = convDate(DonorOnSale)
,DisplayDonorOnSale = trim(DisplayDonorOnSale)
)
TS <- function(x) as.POSIXct(x, origin='1970-01-01')
df5 <- transform(df5
,TodayTS = TS(Today)
,PerfTS = TS(PerfDate)
,OnSaleTS = TS(OnSaleDate)
,DonorOnSaleTS = TS(DonorOnSale)
)
df5
str(df5)
apiurl <- 'http://api.kennedy-center.org/api/Calendar/GetCalendarData/2017-7-22/2018-7-22'
pg <- GET(apiurl)
raw <- content(pg)
df <- do.call(rbind, raw)
df2 <- as.data.frame(df)
#df2$AvailableModesOfSale[sapply( l, paste0, collapse="")]
df2$AvailableModesOfSale[sapply(length, paste0, collapse="")]
df2$GenreList[sapply(df2$GenreList, function(l){ifelse(length(l),FALSE,TRUE)})] <- NA
df2$AvailableModesOfSale[sapply(df2$AvailableModesOfSale, is.null)] <- NA
df2$CustomerModeOfSaleDescription[sapply(df2$CustomerModeOfSaleDescription, is.null)] <- NA
df2$EventCode[sapply(df2$EventCode, is.null)] <- NA
df2$VenueCode[sapply(df2$VenueCode, is.null)] <- NA
df2$PromoMessage[sapply(df2$PromoMessage, is.null)] <- NA
df2$Series[sapply(df2$Series, is.null)] <- NA
df2$DisplayOnSaleDate[sapply(df2$DisplayOnSaleDate, is.null)] <- NA
df2$DisplayDonorOnSale[sapply(df2$DisplayDonorOnSale, is.null)] <- NA
df3 <- apply(df2, 2, unlist)
df3$GenreList <- sapply(df2$GenreList, paste0, collapse=",")
df3$AvailableModesOfSale <- sapply(df2$AvailableModesOfSale, paste0, collapse=",")
df4 <- as.data.frame(df3, stringsAsFactors = FALSE)
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
convDate <- function(x) as.numeric(sub("[)].*", "", sub(".*[(]", "", x))) / 1000
df5 <- transform(df4
,Title = trim(Title)
,Today = convDate(Today)
,PerfDate = convDate(PerfDate)
,DisplayPerfDate = trim(DisplayPerfDate)
,DisplayPerfTime = trim(DisplayPerfTime)
,BlurbAbstract = trim(BlurbAbstract)
,GenreList = trim(GenreList)
,AvailableModesOfSale = trim(AvailableModesOfSale)
,CustomerModeOfSaleDescription = trim(CustomerModeOfSaleDescription)
,EventCode = trim(EventCode)
,VenueCode = trim(VenueCode)
,VenueDescription = trim(VenueDescription)
,OnSaleDate = convDate(OnSaleDate)
,DisplayOnSaleDate = trim(DisplayOnSaleDate)
,DonorOnSale = convDate(DonorOnSale)
,DisplayDonorOnSale = trim(DisplayDonorOnSale)
)
TS <- function(x) as.POSIXct(x, origin='1970-01-01')
df5 <- transform(df5
,TodayTS = TS(Today)
,PerfTS = TS(PerfDate)
,OnSaleTS = TS(OnSaleDate)
,DonorOnSaleTS = TS(DonorOnSale)
)
str(df5)
df5[grep("Ben", df5$Title), ]
df5[grep("Ben Folds", df5$Title), ]
df5[grep("Blake", df5$Title), ]
df5[grep("Clapton", df5$Title), ]
df5[grep("Seu", df5$Title), ]
df5[grep("Chopin", df5$Title), ]
df5[grep("Chopin", df5$BlurbAbstract), ]
df5[grep("Japan", df5$BlurbAbstract), ]
df5[grep("Japan", df5$Title), ]
unique(df5$GenreList)
df5[grep("Mus", df5$Genre), ]
df5[grep("MUS", df5$Genre), ]
df5[grep("MUS", df5$GenreList), ]
df5[grep("Oliver", df5$Title), ]
df5[grep("Oliver", df5$AbstractBlurb), ]
df5[grep("Oliver", df5$BlurbAbstract), ]
df5[grep("Beethoven", df5$Title), ]
df5[grep("Ben Folds", df5$BlurbAbstract), ]
df5[grep("Blake Mills", df5$BlurbAbstract), ]
df5[grep("Blake", df5$BlurbAbstract), ]
batting <- read.csv('C:/Users/sgenn_000/Documents/GitHub/Udemy/Data Science and Machine Learning Bootcamp with R/Guides/Training Exercises/Capstone and Data Viz Projects/Capstone Project/Batting.csv')
head(batting)
str(batting)
head(batting$AB, 5)
head(batting$X2B, 5)
batting$BA <- batting$H / batting$AB
tail(batting$BA, 5)
batting$X1B <- batting$H - batting$X2B - batting$X3B - batting$HR
batting$OBP <- (batting$H + batting$BB + batting$HBP) / (batting$AB + batting$BB + batting$HBP + batting$SF)
batting$SLG <- (batting$X1B + (2 * batting$X2B) + (3 * batting$X3B) + (4 * batting$HR)) / (batting$AB)
str(batting)
sal <- read.csv('C:/Users/sgenn_000/Documents/GitHub/Udemy/Data Science and Machine Learning Bootcamp with R/Guides/Training Exercises/Capstone and Data Viz Projects/Capstone Project/Salaries.csv')
head(sal)
summary(batting)
summary(sal)
batting <- subset(batting, yearID >= 1985)
summary(batting)
str(batting)
combo <- merge(batting, sal, by=c('playerID', 'yearID'))
str(combo)
summary(combo)
lost_players <- subset(combo, playerID %in% c('giambja01', 'damonjo01', 'saenzol01'))
lost_players
lost_players <- subset(lost_players, yearID == 2001)
lost_players
maxsal <- 15000000
minAB <- sum(lost_players$AB)
minOBP <- mean(lost_players$OBP)
combo <- subset(combo, yearID == 2001)
library(dplyr)
str(combo)
fcombo <- subset(combo, select=c('playerID', 'salary', 'AB', 'OBP'))
str(fcombo)
fcombo2 <- merge(x=fcombo, y=fcombo, by=NULL)
str(fcombo2)
fcombo3 <- merge(x=fcombo2, y=fcombo, by=NULL)
?dim
(fcombo2 <- merge(x=fcombo, y=fcombo, by=NULL))
str(fcombo2)
stopifnot((fcombo2$salary.x+fcombo2$salary.y<=maxsal))
library(sqldf)
packages.install('sqldf')
install.packages('sqldf')
library(sqldf)
fcombo2 <- sqldf("
SELECT
*
FROM
fcombo AS a
INNER JOIN
fcombo AS b
ON
a.playerID <> b.playerID
")
str(fcombo2)
fcombo2 <- sqldf("
SELECT
a.playerID AS playerID.a
,a.salary AS salary.a
,a.AB AS AB.a
,a.OBP AS OBP.a
,b.playerID AS playerID.b
,b.salary AS salary.b
,b.AB AS AB.b
,b.OBP AS OBP.b
FROM
fcombo AS a
INNER JOIN
fcombo AS b
ON
a.playerID <> b.playerID
")
fcombo2 <- sqldf("
SELECT
a.playerID AS playerID_a
,a.salary AS salary_a
,a.AB AS AB_a
,a.OBP AS OBP_a
,b.playerID AS playerID_b
,b.salary AS salary_b
,b.AB AS AB_b
,b.OBP AS OBP_b
FROM
fcombo AS a
INNER JOIN
fcombo AS b
ON
a.playerID <> b.playerID
")
str(fcombo2)
fcombo3 <- sqldf("
SELECT
playerID_a
,salary_a
,AB_a
,OBP_a
,playerID_b
,salary_b
,AB_b
,OBP_b
,c.playerID AS playerID_c
,c.salary AS salary_c
,c.AB AS AB_c
,c.OBP AS OBP_c
FROM
fcombo2 AS a
INNER JOIN
fcombo AS c
ON
playerID_a <> c.playerID
AND playerID_b <> c.playerID
WHERE
(salary_a + salary_b + c.salary) <= maxsal
AND (AB_a + AB_b + c.AB) >= minAB
AND ((OBP_a + OBP_b + c.OBP) / 3) >= minOBP
")
maxsal
minAB
minOBP
fcombo3 <- sqldf("
SELECT
playerID_a
,salary_a
,AB_a
,OBP_a
,playerID_b
,salary_b
,AB_b
,OBP_b
,c.playerID AS playerID_c
,c.salary AS salary_c
,c.AB AS AB_c
,c.OBP AS OBP_c
FROM
fcombo2 AS a
INNER JOIN
fcombo AS c
ON
playerID_a <> c.playerID
AND playerID_b <> c.playerID
WHERE
(salary_a + salary_b + c.salary) <= 15000000
AND (AB_a + AB_b + c.AB) >= 1469
AND ((OBP_a + OBP_b + c.OBP) / 3) >= 0.3638687
")
str(fcombo3)
fcombo3$total_salary <- fcombo3$salary_a + fcombo3$salary_b + fcombo3$salary_c
str(fcombo3)
fcombo3$total_AB <- fcombo3$AB_a + fcombo3$AB_b + fcombo3$AB_c
fcombo3$mean_OBP <- mean(c(fcombo3$OBP_a, fcombo3$OBP_b, fcombo3$OBP_c))
str(fcombo3)
maxsal
minAB
minOBP
arrange(fcombo3, total_salary)
fcombo3 <- arrange(fcombo3, total_salary)
str(fcombo3)
head(fcombo3)
